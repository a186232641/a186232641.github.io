<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mac登录天坑</title>
      <link href="/2024/01/25/mac-ssh/"/>
      <url>/2024/01/25/mac-ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>之间一直连接远程GPU进行深度学习训练，因为不是本机的GPU所以需要在平台进行租用。GPU平台可以配置公钥，从而避免了本机上传公钥，配置好公钥后还是要求输入私钥的密码。这就是mac的天坑。还好最后解决了</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li>检查是否已存在公私钥对</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh  </span><br><span class="line"># 更换目录到 ~/.ssh</span><br><span class="line">ls             </span><br><span class="line"># 查看当前目录公私钥文件</span><br></pre></td></tr></table></figure><ol><li>生成公私钥对<strong>（可选步骤）</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen  </span><br><span class="line"># 根据交互，输入你想要的名字（默认id_rsa）</span><br><span class="line"># 然后是passphrase，设置为空即可。这样就生成了一对公私钥  </span><br><span class="line">ls                </span><br><span class="line"># 这时候当前目录下会多了一对公私钥对。</span><br></pre></td></tr></table></figure><p>3.上传公钥到服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i [公钥文件] user@host </span><br><span class="line"># user是你的ssh的用户，host是服务器地址，这时候还要输入密码。</span><br><span class="line"># 例子：ssh-copy-id -i id_rsa.pub root@111.111.111.111</span><br></pre></td></tr></table></figure><ol><li>ssh-add<strong>（mac的坑点）</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -K [你的私钥文件，就是那个不加.pub结尾的文件] </span><br><span class="line"># 例如，ssh-add -K id_rsa</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Users/hanfeilong/Hexo/source/_posts/mac%E7%99%BB%E5%BD%95%E5%A4%A9%E5%9D%91/image-20240125110646180-6152009-6152011.png" alt="image-20240125110646180"></p><p>最后完美解决，终于不用在vs code中输入密码了。😭😭</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git命令</title>
      <link href="/2023/08/25/git%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/08/25/git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>设置用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config —global [user.name](http://user.name) ‘aaa’</span><br></pre></td></tr></table></figure><p>设置邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config —global [user.](http://user.name)email  ‘a187@gmail.com’</span><br></pre></td></tr></table></figure><p>查看用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config —global [user.name](http://user.name)</span><br></pre></td></tr></table></figure><p>查看邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config —global [user.](http://user.name)email</span><br></pre></td></tr></table></figure><p>为常用指令配置别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.bashrc</span><br></pre></td></tr></table></figure><p>git 初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="git-常用指令"><a href="#git-常用指令" class="headerlink" title="git 常用指令"></a>git 常用指令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add (工作区—&gt;暂存区)</span><br><span class="line"></span><br><span class="line">git commit (暂存区—&gt;仓库)</span><br><span class="line"></span><br><span class="line">git status   查看文件状态</span><br></pre></td></tr></table></figure><p> 查看日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>版本回退： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset —hard commitid</span><br></pre></td></tr></table></figure><p> 查看已经删除的日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure><p> 忽略仓库中的某些文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.gitignore</span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>查看本地分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>创建本地分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch   name</span><br></pre></td></tr></table></figure><p>切换分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout name</span><br></pre></td></tr></table></figure><p>分支重命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m old_name new_name</span><br></pre></td></tr></table></figure><p>切换并且创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout  -b name</span><br></pre></td></tr></table></figure><p>合并分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge</span><br></pre></td></tr></table></figure><p>删除分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d name</span><br><span class="line">git branch -D name. (如果分支没有merge到master上需要使用强制删除)</span><br></pre></td></tr></table></figure><p>添加远程仓库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:a186232641/Hexo.git</span><br><span class="line">git remote add &lt;远端名称&gt;  &lt;仓库路径&gt;</span><br></pre></td></tr></table></figure><p>查看是否有远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure><p>上传到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这个问题是因为远程库与本地库不一致造成的，那么我们把远程库同步到本地库就可以了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>本地分支和远程分支进行绑定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push —set-upstream origin master:master</span><br></pre></td></tr></table></figure><p>查看本地分支与远程分支的关系</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
